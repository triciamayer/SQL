#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 

#1. How many orders were placed in January?
SELECT COUNT(orderid) 
FROM BIT_DB.JanSales
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

#2. How many of those orders were for an iPhone?
SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE Product='iPhone'
AND length(orderid) = 6
AND orderid <> 'Order ID';

#3. Select the customer account numbers for all the orders that were placed in February. 
SELECT distinct acctnum
FROM BIT_DB.customers cust
INNER JOIN BIT_DB.FebSales Feb
ON cust.order_id=FEB.orderid
WHERE length(orderid) = 6 
AND orderid <> 'Order ID'

#4. Which product was the cheapest one sold in January, and what was the price? 
SELECT distinct Product,price
FROM BIT_DB.JanSales
WHERE price in (SELECT min(price) FROM BIT_DB.JanSales);

#5. What is the total revenue for each product sold in January?
SELECT product,sum(quantity)*price as revenue
FROM BIT_DB.JanSales 
WHERE price <> 'Price Each'
AND product <> 'Product'
GROUP BY product
ORDER BY revenue ASC;

#6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT
sum(Quantity),
product,
sum(quantity)*price as revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product;

#7. How many customers ordered more than 2 products at a time, and what was the average amount spent for those customers?
SELECT count(distinct cust.acctnum),avg(quantity*price)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON FEB.orderid=cust.order_id
WHERE Feb.Quantity>2
AND length(orderid) = 6
AND orderid <> 'Order ID';

#8. List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT Product,SUM(quantity)
FROM BIT_DB.FebSales
WHERE Location like '%Los Angeles%'
GROUP BY Product

#9. List all order dates between 2/13/19 and 2/18/19.
SELECT orderdate
FROM BIT_DB.FebSales
WHERE orderdate between '02/13/19 00:00' AND '02/18/19 00:00'

#10. Find a specific order from 2/18/19 at 1:35.
SELECT location
FROM BIT_DB.FebSales
WHERE orderdate = '02/18/19 01:35'

#11. How many orders were placed at any time on 2/18/19?
SELECT sum(quantity)
FROM BIT_DB.FebSales
WHERE orderdate like '02/18/19%'

#12. How many different battery products are sold?
SELECT distinct Product
FROM BIT_DB.FebSales
WHERE Product like '%Batteries%'

#13. What products are sold that end in $.99?
SELECT distinct Product, Price
FROM BIT_DB.FebSales
WHERE Price like '%.99'

#14. Which locations in New York received at least 3 orders in January, and how many orders did they each receive?
SELECT distinct location, COUNT(orderID)
FROM BIT_DB.JanSales 
WHERE Location like '%NY%'
AND length(orderid) = 6
AND orderid <> 'Order ID'
GROUP BY location
HAVING count(orderID)>=3

#15. How many of each type of headphone were sold in February?
SELECT SUM(Quantity) as quantity, Product
FROM BIT_DB.FebSales
WHERE Product like '%Headphones%'
AND length(orderID)=6
AND orderid <> 'Order ID'
GROUP BY Product

#16. What was the average amount spent per account in February? 
SELECT SUM(Quantity*Price)/COUNT(cust.acctnum)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON Feb.orderid = cust.order_ID
WHERE length(orderid) = 6
AND orderid <> 'Order ID'

#17. What was the average quantity of products purchased per account in February?
SELECT SUM(Quantity)/COUNT(cust.acctnum)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON Feb.orderid = cust.order_ID
WHERE length(orderid) = 6
AND orderid <> 'Order ID'

#18. Which product brought in the most revenue in January and how much revenue did it bring in total?
SELECT SUM(Quantity*Price), Product
FROM BIT_DB.JanSales Jan
GROUP BY Product
ORDER BY sum(Quantity*Price) DESC
LIMIT 1
